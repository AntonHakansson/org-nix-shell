First, load nix-shell environment by running [[elisp:(org-nix-shell-load-direnv)]].

#+name: nix-shell
#+begin_src nix
  { pkgs ? import <nixpkgs> {}, pythonPackages ? pkgs.python3Packages }:
  pkgs.mkShell {
    buildInputs = [
      pythonPackages.sympy
      pkgs.hello
      pkgs.pkg-config
      pkgs.cairo
    ];
  }
#+end_src


* Shell
#+begin_src sh
hello
#+end_src

* Python

#+begin_src python :results drawer output
  from sympy import *
  x = symbols('x');
  expr = 10**x
  print("\\[ \\int" + latex(expr) + " = " + latex(integrate(expr)) + " \\]")
#+end_src

* C

#+name: c-cairo-flags
#+begin_src sh
  pkg-config cairo --cflags --libs
#+end_src

#+headers: :flags (org-sbe "c-cairo-flags")
#+begin_src C :results file
  #include <stdio.h>
  #include <cairo.h>
  int main (int argc, char *argv[]) {
    cairo_surface_t *surface = cairo_image_surface_create(CAIRO_FORMAT_ARGB32, 64, 64);
    cairo_t *cr = cairo_create (surface);
    cairo_scale (cr, 64, 64);

    cairo_set_line_width (cr, 0.1);
    cairo_set_source_rgb (cr, 1, 0, 0);
    cairo_rectangle (cr, 0.25, 0.25, 0.5, 0.5);
    cairo_stroke (cr);

    cairo_surface_write_to_png (surface, "hello.png");
    cairo_destroy (cr);
    cairo_surface_destroy (surface);

    printf("hello.png");
    return 0;
  }
#+end_src

