#+html: <div align=center>
#+html: <h2 align=center>org-nix-shell</h2>
#+html: <p>Buffer-local nix-shell environment in org-mode.</p>
#+html: <img src='img/showcase.png'>
#+html: </div>

This package is experimental; expect bugs and breaking changes.

Use nix shells directly in org-mode and org-babel src blocks.
=org-nix-shell= works by loading a nix shell environment using [[https://direnv.net/][direnv]].

* Quickstart

#+begin_src org
  ,#+name: nix-shell
  ,#+begin_src nix
    { pkgs ? import <nixpkgs> {} }:
    pkgs.mkShell {
      buildInputs = [ pkgs.hello ];
    }
  ,#+end_src

  ,#+begin_src sh :nix-shell "nix-shell"  # load named nix-shell src block
    hello   # use 'hello' dependency
  ,#+end_src
#+end_src

Enable =org-nix-shell-mode= and evaluate or export the buffer.
See [[file:demo.org][demo.org]] with examples for Python and C.

* Installation

Make sure [[https://direnv.net/][direnv]] is installed on your system ([[https://github.com/nix-community/nix-direnv#installation][nix-community/nix-direnv#Installation]]).

** Manual

First, put [[file:org-nix-shell.el][org-nix-shell.el]] in your load path.
Then evaluate:

#+begin_src emacs-lisp
  (require 'org-nix-shell)
  (add-hook 'org-mode-hook 'org-nix-shell-mode)
#+end_src

** Straight

#+begin_src elisp
  (use-package org-nix-shell
    :straight '(org-nix-shell
                :type git
                :host github
                :repo "AntonHakansson/org-nix-shell")
    :hook (org-mode . org-nix-shell-mode))
#+end_src

** Nix

With ~emacsWithPackagesFromUsePackage~ you can do:
#+begin_src nix
  pkgs.emacsWithPackagesFromUsePackage {
    config = ./init.el;
    extraEmacsPackages = epkgs:
      [(epkgs.trivialBuild rec {
        pname = "org-nix-shell";
        version = "v0.3.0";
        packageRequires = [ epkgs.envrc ];
        src = pkgs.fetchFromGitHub {
          owner = "AntonHakansson";
          repo = pname;
          rev = version;
          sha256 = lib.fakeHash;
        };
      })];
  };
#+end_src

* Customization

=M-x customize-group org-nix-shell= to see available customizable variables.
